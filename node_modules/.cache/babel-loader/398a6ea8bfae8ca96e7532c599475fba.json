{"ast":null,"code":"var _jsxFileName = \"/home/hajar/Desktop/Projects/Route-19/src/components/NavBarTrue/NavBar.js\";\nimport React, { Component } from 'react';\nimport DesktopNavBar from './DesktopNavBar';\nimport MobileNavBar from './MobileNavBar';\nimport styled from 'styled-components';\nimport { MenuContextProvider } from '../../contexts/ToggleMenu.js';\nconst MyNavBar = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n`;\nexport default class NavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      window.addEventListener('resize', this.checkAndHideMobileNavBar);\n    };\n\n    this.componentWillUnmount = () => {\n      window.addEventListener('resize', this.checkAndHideMobileNavBar);\n    };\n\n    this.toggleMobileNavBar = () => {\n      this.setState(prevState => {\n        console.log(this.state.displayMobileNavBar);\n\n        if (this.props.mode != 10) {\n          return {\n            displayMobileNavBar: !prevState.displayMobileNavBar\n          };\n        }\n      });\n    };\n\n    this.checkAndHideMobileNavBar = () => {\n      const screenwidth = window.innerWidth;\n\n      if (this.state.displayMobileNavBar && screenwidth > 768) {\n        this.setState({ ...this.state,\n          displayMobileNavBar: true\n        });\n      }\n    };\n\n    this.state = {\n      displayMobileNavBar: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MyNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DesktopNavBar, {\n      displayMobileNavBar: this.state.displayMobileNavBar,\n      toggleMobileNavBar: this.toggleMobileNavBar,\n      mode: this.props.mode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MenuContextProvider, {\n      value: {\n        displayMovileNavBar: this.state.displayMobileNavBar,\n        toggleHandler: this.toggleMobileNavBar,\n        mode: this.props.mode\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MobileNavBar, {\n      displayMobileNavBar: this.state.displayMobileNavBar,\n      toggleMobileNavBar: this.toggleMobileNavBar,\n      mode: this.props.mode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/hajar/Desktop/Projects/Route-19/src/components/NavBarTrue/NavBar.js"],"names":["React","Component","DesktopNavBar","MobileNavBar","styled","MenuContextProvider","MyNavBar","div","NavBar","constructor","props","componentDidMount","window","addEventListener","checkAndHideMobileNavBar","componentWillUnmount","toggleMobileNavBar","setState","prevState","console","log","state","displayMobileNavBar","mode","screenwidth","innerWidth","render","displayMovileNavBar","toggleHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,QAAoC,8BAApC;AAEA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,GAAI;;;;CAA5B;AAMA,eAAe,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC1CQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,iBAPkB,GAOE,MAAM;AACtBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,wBAAvC;AACH,KATiB;;AAAA,SAWlBC,oBAXkB,GAWK,MAAM;AACzBH,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,wBAAvC;AACH,KAbiB;;AAAA,SAelBE,kBAfkB,GAeE,MAAM;AACtB,WAAKC,QAAL,CAAeC,SAAS,IAAI;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,mBAAvB;;AACA,YAAG,KAAKZ,KAAL,CAAWa,IAAX,IAAmB,EAAtB,EAAyB;AACrB,iBAAO;AAAED,YAAAA,mBAAmB,EAAE,CAACJ,SAAS,CAACI;AAAlC,WAAP;AACH;AACJ,OALD;AAMH,KAtBiB;;AAAA,SAwBlBR,wBAxBkB,GAwBS,MAAM;AAC7B,YAAMU,WAAW,GAAGZ,MAAM,CAACa,UAA3B;;AACA,UAAG,KAAKJ,KAAL,CAAWC,mBAAX,IAAkCE,WAAW,GAAG,GAAnD,EAAuD;AACnD,aAAKP,QAAL,CAAc,EACV,GAAG,KAAKI,KADE;AAEVC,UAAAA,mBAAmB,EAAE;AAFX,SAAd;AAKH;AACJ,KAjCiB;;AAEV,SAAKD,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAE;AADZ,KAAb;AAGX;;AA8BGI,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AACI,MAAA,mBAAmB,EAAI,KAAKL,KAAL,CAAWC,mBADtC;AAEI,MAAA,kBAAkB,EAAI,KAAKN,kBAF/B;AAGI,MAAA,IAAI,EAAG,KAAKN,KAAL,CAAWa,IAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE;AAAEI,QAAAA,mBAAmB,EAAE,KAAKN,KAAL,CAAWC,mBAAlC;AACxBM,QAAAA,aAAa,EAAE,KAAKZ,kBADI;AACgBO,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWa;AADjC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,YAAD;AAAc,MAAA,mBAAmB,EAAI,KAAKF,KAAL,CAAWC,mBAAhD;AAAqE,MAAA,kBAAkB,EAAI,KAAKN,kBAAhG;AAAoH,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWa,IAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CALJ,CADJ;AAYH;;AAjDyC","sourcesContent":["import React, { Component } from 'react'\nimport DesktopNavBar from './DesktopNavBar'\nimport MobileNavBar from './MobileNavBar'\nimport styled from 'styled-components'\nimport { MenuContextProvider } from '../../contexts/ToggleMenu.js'\n\nconst MyNavBar = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n`\n\nexport default class NavBar extends Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                displayMobileNavBar: false\n            }\n}\n\n    componentDidMount = () => { \n        window.addEventListener('resize', this.checkAndHideMobileNavBar)\n    }\n\n    componentWillUnmount = () => {\n        window.addEventListener('resize', this.checkAndHideMobileNavBar)\n    }\n\n    toggleMobileNavBar =() => {\n        this.setState( prevState => {\n            console.log(this.state.displayMobileNavBar)\n            if(this.props.mode != 10){\n                return { displayMobileNavBar: !prevState.displayMobileNavBar }\n            }\n        })\n    }\n\n    checkAndHideMobileNavBar = () => {\n        const screenwidth = window.innerWidth\n        if(this.state.displayMobileNavBar && screenwidth > 768){\n            this.setState({\n                ...this.state,\n                displayMobileNavBar: true\n            })\n            \n        }\n    }\n\n    render() {\n        return (\n            <MyNavBar>\n                <DesktopNavBar \n                    displayMobileNavBar = {this.state.displayMobileNavBar}\n                    toggleMobileNavBar = {this.toggleMobileNavBar}\n                    mode ={this.props.mode}/>\n                <MenuContextProvider value={{ displayMovileNavBar: this.state.displayMobileNavBar,\n                    toggleHandler: this.toggleMobileNavBar, mode: this.props.mode}}>\n                <MobileNavBar displayMobileNavBar = {this.state.displayMobileNavBar} toggleMobileNavBar = {this.toggleMobileNavBar} mode={this.props.mode}/>\n                </MenuContextProvider>\n            </MyNavBar>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}